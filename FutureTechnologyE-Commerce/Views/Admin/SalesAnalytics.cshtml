@model IEnumerable<FutureTechnologyE_Commerce.Models.ViewModels.ChartDataPoint>
@{
    ViewData["Title"] = "Sales Analytics";
    Layout = "~/Views/Shared/_Layout.cshtml";
    
    var startDate = ViewBag.StartDate as DateTime?;
    var endDate = ViewBag.EndDate as DateTime?;
    var groupBy = ViewBag.GroupBy as string ?? "day";
    var totalSales = ViewBag.TotalSales as decimal? ?? 0;
    var orderCount = ViewBag.OrderCount as int? ?? 0;
    var averageOrderValue = ViewBag.AverageOrderValue as decimal? ?? 0;
    var topProducts = ViewBag.TopProducts as List<FutureTechnologyE_Commerce.Models.ViewModels.TopSellingProduct> ?? new List<FutureTechnologyE_Commerce.Models.ViewModels.TopSellingProduct>();
}

<div class="container-fluid p-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1 class="text-primary">
            <i class="bi bi-graph-up me-2"></i>Sales Analytics
        </h1>
    </div>

    <!-- Date Range and Group By Filter -->
    <div class="card shadow mb-4">
        <div class="card-body">
            <form method="get" class="row g-3">
                <div class="col-md-3">
                    <label class="form-label">Start Date</label>
                    <input type="date" name="startDate" class="form-control" value="@(startDate?.ToString("yyyy-MM-dd"))">
                </div>
                <div class="col-md-3">
                    <label class="form-label">End Date</label>
                    <input type="date" name="endDate" class="form-control" value="@(endDate?.ToString("yyyy-MM-dd"))">
                </div>
                <div class="col-md-3">
                    <label class="form-label">Group By</label>
                    <select name="groupBy" class="form-select">
                        <option value="day" selected="@(groupBy == "day")">Daily</option>
                        <option value="week" selected="@(groupBy == "week")">Weekly</option>
                        <option value="month" selected="@(groupBy == "month")">Monthly</option>
                    </select>
                </div>
                <div class="col-md-3 d-flex align-items-end">
                    <button type="submit" class="btn btn-primary w-100">Apply</button>
                </div>
            </form>
        </div>
    </div>

    <!-- Sales Overview Cards -->
    <div class="row mb-4">
        <div class="col-md-4">
            <div class="card text-white bg-primary h-100">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h6 class="text-white-50">Total Sales</h6>
                            <h2 class="mb-0">$@totalSales.ToString("N2")</h2>
                        </div>
                        <i class="bi bi-cash-stack fs-1"></i>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card text-white bg-success h-100">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h6 class="text-white-50">Orders</h6>
                            <h2 class="mb-0">@orderCount</h2>
                        </div>
                        <i class="bi bi-cart-check fs-1"></i>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card text-white bg-info h-100">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h6 class="text-white-50">Average Order Value</h6>
                            <h2 class="mb-0">$@averageOrderValue.ToString("N2")</h2>
                        </div>
                        <i class="bi bi-calculator fs-1"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Sales Charts -->
    <div class="row mb-4">
        <div class="col-md-12">
            <div class="card shadow">
                <div class="card-header bg-white">
                    <h5 class="card-title m-0">Sales Trend</h5>
                </div>
                <div class="card-body">
                    <div style="height: 400px;">
                        <canvas id="salesChart"></canvas>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Top Products -->
    <div class="row">
        <div class="col-md-12">
            <div class="card shadow">
                <div class="card-header bg-white">
                    <h5 class="card-title m-0">Top Selling Products</h5>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-8">
                            <canvas id="productChart" style="height: 300px;"></canvas>
                        </div>
                        <div class="col-md-4">
                            <div class="table-responsive">
                                <table class="table table-hover">
                                    <thead>
                                        <tr>
                                            <th>Product</th>
                                            <th>Quantity</th>
                                            <th>Revenue</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var product in topProducts)
                                        {
                                            <tr>
                                                <td>
                                                    <div class="d-flex align-items-center">
                                                        <img src="@(string.IsNullOrEmpty(product.ImageUrl) ? "/images/placeholder.png" : product.ImageUrl)" class="me-2" style="width:30px;height:30px;object-fit:cover;">
                                                        <a asp-controller="Product" asp-action="Details" asp-route-id="@product.ProductId">@product.Name</a>
                                                    </div>
                                                </td>
                                                <td>@product.QuantitySold</td>
                                                <td>$@product.Revenue.ToString("N2")</td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        // Configure Sales Chart
        const salesCtx = document.getElementById('salesChart').getContext('2d');
        const salesChart = new Chart(salesCtx, {
            type: 'line',
            data: {
                labels: [@Html.Raw(string.Join(",", Model.Select(p => $"'{p.Label}'")))],
                datasets: [{
                    label: 'Sales Revenue',
                    data: [@string.Join(",", Model.Select(p => p.Value))],
                    backgroundColor: 'rgba(54, 162, 235, 0.2)',
                    borderColor: 'rgba(54, 162, 235, 1)',
                    borderWidth: 2,
                    tension: 0.4
                }]
            },
            options: {
                maintainAspectRatio: false,
                scales: {
                    y: {
                        beginAtZero: true,
                        ticks: {
                            callback: function(value) {
                                return '$' + value;
                            }
                        }
                    }
                },
                plugins: {
                    tooltip: {
                        callbacks: {
                            label: function(context) {
                                return '$' + context.parsed.y.toFixed(2);
                            }
                        }
                    }
                }
            }
        });

        // Configure Product Chart
        const productCtx = document.getElementById('productChart').getContext('2d');
        const productChart = new Chart(productCtx, {
            type: 'bar',
            data: {
                labels: [@Html.Raw(string.Join(",", topProducts.Select(p => $"'{p.Name}'")))],
                datasets: [{
                    label: 'Revenue',
                    data: [@string.Join(",", topProducts.Select(p => p.Revenue))],
                    backgroundColor: [
                        'rgba(54, 162, 235, 0.7)',
                        'rgba(75, 192, 192, 0.7)',
                        'rgba(255, 205, 86, 0.7)',
                        'rgba(153, 102, 255, 0.7)',
                        'rgba(255, 159, 64, 0.7)',
                        'rgba(255, 99, 132, 0.7)',
                        'rgba(201, 203, 207, 0.7)',
                        'rgba(100, 120, 140, 0.7)',
                        'rgba(120, 190, 150, 0.7)',
                        'rgba(210, 140, 180, 0.7)'
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                maintainAspectRatio: false,
                scales: {
                    y: {
                        beginAtZero: true,
                        ticks: {
                            callback: function(value) {
                                return '$' + value;
                            }
                        }
                    }
                },
                plugins: {
                    tooltip: {
                        callbacks: {
                            label: function(context) {
                                return '$' + context.parsed.y.toFixed(2);
                            }
                        }
                    },
                    legend: {
                        display: false
                    }
                }
            }
        });
    </script>
} 