@model FutureTechnologyE_Commerce.Models.ViewModels.InventoryViewModel

@{
    ViewData["Title"] = "Edit Inventory";
}

@if (Model == null || Model.Inventory == null || Model.Product == null)
{
    <div class="alert alert-danger">
        <h4>Error</h4>
        <p>Could not load the inventory data. The data may be missing or corrupted.</p>
    </div>
    <a asp-action="Index" class="btn btn-primary">Back to Inventory List</a>
}
else
{
    <div class="container p-4">
        <div class="row mb-4">
            <div class="col">
                <h2 class="text-primary fw-bold">
                    <i class="bi bi-pencil me-2"></i>Edit Inventory
                </h2>
                <p class="text-muted">Update inventory settings for @Model.Product.Name</p>
            </div>
            <div class="col text-end">
                <a asp-action="Index" class="btn btn-outline-secondary">
                    <i class="bi bi-arrow-left"></i> Back to Inventory
                </a>
            </div>
        </div>

        <div class="row">
            <div class="col-md-8 mx-auto">
                <div class="card shadow-sm">
                    <div class="card-body">
                        <form method="post" asp-action="Edit">
                            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                            
                            <input type="hidden" asp-for="Inventory.InventoryId" />
                            <input type="hidden" asp-for="Inventory.ProductId" />

                            <div class="mb-4">
                                <div class="product-info bg-light p-3 rounded">
                                    <h5 class="mb-3">@Model.Product.Name</h5>
                                    <div class="row">
                                        <div class="col-md-6">
                                            @if (Model.Product.Category != null)
                                            {
                                                <p class="text-muted mb-1">Category: <span class="text-dark">@Model.Product.Category.Name</span></p>
                                            }
                                            <p class="text-muted mb-1">Price: <span class="text-dark">$@Model.Product.Price.ToString("0.00")</span></p>
                                        </div>
                                        <div class="col-md-6">
                                            <p class="text-muted mb-1">Last updated: <span class="text-dark">@Model.Inventory.LastUpdated.ToString("g")</span></p>
                                            @if (Model.Inventory.LastRestockDate.HasValue)
                                            {
                                                <p class="text-muted mb-1">Last restock: <span class="text-dark">@Model.Inventory.LastRestockDate.Value.ToString("g")</span></p>
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-md-6 mb-3">
                                    <label asp-for="Inventory.CurrentStock" class="form-label fw-semibold">Current Stock</label>
                                    <input asp-for="Inventory.CurrentStock" class="form-control" min="0" />
                                    <span asp-validation-for="Inventory.CurrentStock" class="text-danger"></span>
                                    <div class="form-text">Use the Adjust Stock feature for inventory changes with history</div>
                                </div>

                                <div class="col-md-6 mb-3">
                                    <label asp-for="Inventory.LowStockThreshold" class="form-label fw-semibold">Low Stock Threshold</label>
                                    <div class="input-group">
                                        <input asp-for="Inventory.LowStockThreshold" class="form-control" min="1" />
                                        <span class="input-group-text">units</span>
                                    </div>
                                    <span asp-validation-for="Inventory.LowStockThreshold" class="text-danger"></span>
                                    <div class="form-text">System will alert when stock falls below this threshold</div>
                                </div>
                            </div>

                            <div class="mb-3">
                                <label asp-for="Inventory.Notes" class="form-label fw-semibold">Notes</label>
                                <textarea asp-for="Inventory.Notes" class="form-control" rows="3" placeholder="Optional inventory notes"></textarea>
                                <span asp-validation-for="Inventory.Notes" class="text-danger"></span>
                            </div>

                            <div class="d-grid gap-2 d-md-flex justify-content-md-end mt-4">
                                <a asp-action="AdjustStock" asp-route-id="@Model.Inventory.InventoryId" class="btn btn-success me-md-2">
                                    <i class="bi bi-plus-slash-minus me-1"></i> Adjust Stock
                                </a>
                                <a asp-action="Index" class="btn btn-outline-secondary me-md-2">Cancel</a>
                                <button type="submit" class="btn btn-primary">
                                    <i class="bi bi-check-circle me-1"></i> Save Changes
                                </button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    @{
        <partial name="_ValidationScriptsPartial" />
    }
} 