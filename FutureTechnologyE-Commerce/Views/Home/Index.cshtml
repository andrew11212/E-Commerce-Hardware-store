@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager

@using FutureTechnologyE_Commerce.Models.ViewModels
@model HomeIndexViewModel
@{
    ViewData["Title"] = "Home Page";
}





<!-- Simple Promotion Carousel -->
<div class="simple-carousel">
    <div class="carousel-inner">
        <!-- Slide 1 -->
        <div class="carousel-item active">
            <img src="/images/ASUS TUF Gaming F15 Gaming Laptop.jpeg" alt="Promotion 1" class="carousel-image">
 
        </div>

        <!-- Slide 2 -->
        <div class="carousel-item">
            <img src="/images/ASUS TUF GAMING F15.jpeg" alt="Promotion 2" class="carousel-image">
           
        </div>

        <!-- Slide 3 -->
        <div class="carousel-item">
            <img src="/images/Pc Portable Gamer ASUS TUF F15 _ 15_6″ _ Intel i7 _ RTX 4060 _ 8 Go Ram.jpeg"
            </div>

        </div>
    </div>

    <!-- Navigation Indicators -->
    <div class="carousel-indicators">
        <span class="indicator active" data-slide-to="0"></span>
        <span class="indicator" data-slide-to="1"></span>
        <span class="indicator" data-slide-to="2"></span>
    </div>
</div>

<!-- Best Selling Products Section -->
<section class="py-4 py-md-5 ">
    <div class="container">
        <div class="curved-line">
            <div class="d-flex justify-content-between align-items-center mb-3 mb-md-4">
                <h3-title class="  fw-bold text-uppercase  mb-0">Best Selling Products</h3-title>
                <a asp-action="GetAllProducts" asp-controller="Home"
                   class="text-decoration-none Mtext-primary d-none d-md-inline">
                    View All <i class="bi bi-arrow-right"></i>
                </a>
            </div>
        </div>

        <!-- Carousel Container -->
        <div class="position-relative">
            <!-- Navigation Arrows -->
            <button class="carousel-arrow prev-arrow d-none d-md-flex">
                <i class="bi bi-chevron-left fs-1 text-primary"></i>
            </button>
            <button class="carousel-arrow next-arrow d-none d-md-flex">
                <i class="bi bi-chevron-right fs-1 text-primary"></i>
            </button>

            <!-- Scroll Container -->
            <div class="scroll-container">
                <div class="d-flex flex-nowrap">
                    @foreach (var product in Model.Products)
                    {
                        <div class="product-card mx-2_adjusted mb-3" style="min-width: 22%;">
                            <div class="card h-100 border-0 shadow-sm rounded-3">
                                <picture>
                                    <source srcset="@product.ImageUrl" type="image/webp">
                                    <img src="@product.ImageUrl"
                                         class="card-img-top object-fit-cover"
                                         style="aspect-ratio: 4/3;"
                                         alt="@product.Name"
                                         loading="lazy"
                                         onerror="this.src='/images/placeholder.avif'">
                                </picture>
                                <div class="card-body d-flex flex-column px-3 pb-3">
                                    <h5 class="card-title fw-semibold text-truncate-2 mb-2">@product.Name</h5>
                                    <div class="d-flex justify-content-between align-items-center mb-3">
                                        <div>
                                            <!-- In both product and laptop sections -->
                                            <span class="text-primary  fw-bold text-uppercase  fs-5">@product.Price.ToString("N0") EGP</span>
                                            <del class="text-muted small ms-2 d-none d-md-inline">@((product.Price * 1.2m).ToString("N0")) EGP</del>
                                        </div>
                                        <span class="badge bg-@(product.StockQuantity > 0 ? "success" : "danger") rounded-pill">
                                            @(product.StockQuantity > 0 ? "In Stock" : "Sold Out")
                                        </span>
                                    </div>
                                    <div class="d-grid gap-2 mt-auto">
                                        <a asp-action="Details" asp-route-id="@product.ProductID"
                                           class="btn btn-outline-primary rounded-pill btn-sm">
                                            View Details
                                        </a>
                                        @if (SignInManager.IsSignedIn(User)) // Or @if (User.Identity.IsAuthenticated)
                                        {
                                            <form asp-controller="Cart" asp-action="AddToCart" method="post">
                                                @Html.AntiForgeryToken()
                                                <input type="hidden" name="productId" value="@product.ProductID" />
                                                <div class="d-grid gap-2">
                                                    <button type="submit"
                                                            class="btn btn-primary rounded-pill btn-sm d-flex align-items-center justify-content-center"
                                                    @(product.StockQuantity == 0 ? "disabled" : "")>
                                                        <span class="spinner-border spinner-border-sm d-none me-2" role="status" aria-hidden="true"></span>
                                                        <span class="btn-text">Add to Cart</span> <i class="bi bi-cart-plus ms-2"></i>
                                                    </button>
                                                </div>
                                            </form>
                                        }
                                        else
                                        {
                                            // --- User is LOGGED OUT: Use the GET link ---
                                            <a asp-controller="Cart" asp-action="RequestAddToCartAfterLogin"
                                               asp-route-productId="@product.ProductID"
                                               class="btn btn-primary rounded-pill btn-sm d-flex align-items-center justify-content-center">
                                                <span class="spinner-border spinner-border-sm d-none me-2" role="status" aria-hidden="true"></span>
                                                <span class="btn-text">Add to Cart</span> <i class="bi bi-cart-plus ms-2"></i>

                                            </a>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</section>


<!-- Laptops Section -->
<section id="laptops" class="py-4 py-md-5 ">
    <div class="container">
        <div class="curved-line">
        <div class="d-flex justify-content-between align-items-center mb-3 mb-md-4">
            <h3-title class=" fw-bold text-uppercase  mb-0">Laptops</h3-title>
            <a asp-action="GetAllLaptops" asp-controller="Home"
               class="text-decoration-none Mtext-primary d-none d-md-inline">
                View All <i class="bi bi-arrow-right"></i>
            </a>
            </div>
        </div>

        <!-- LAPTOP Carousel Container -->
        <div class="position-relative">
            <button class="carousel-arrow prev-arrow-laptops d-none d-md-flex">
                <i class="bi bi-chevron-left fs-1 text-primary"></i>
            </button>
            <button class="carousel-arrow next-arrow-laptops d-none d-md-flex">
                <i class="bi bi-chevron-right fs-1 text-primary"></i>
            </button>

            <div class="scroll-container-laptops">
                <div class="d-flex flex-nowrap">
                    @foreach (var laptop in Model.Laptops)
                    {
                        <div class="product-card mx-2_adjusted mb-3" style="min-width: 22%;">
                            <div class="card h-100 border-0 shadow-sm rounded-3">
                                <picture>
                                    <source srcset="@laptop.ImageUrl" type="image/webp">
                                    <img src="@laptop.ImageUrl"
                                         class="card-img-top object-fit-cover"
                                         style="aspect-ratio: 4/3;"
                                         alt="@laptop.Name"
                                         loading="lazy"
                                         onerror="this.src='/images/placeholder.avif'">
                                </picture>
                                <div class="card-body d-flex flex-column px-3 pb-3">
                                    <h5 class="card-title fw-semibold text-truncate-2 mb-2">@laptop.Name</h5>
                                    <div class="d-flex justify-content-between align-items-center mb-3">
                                        <div>
                                            <!-- In both product and laptop sections -->
                                            <span class="text-primary  fw-bold text-uppercase  fs-5">@laptop.Price.ToString("N0") EGP</span>
                                            <del class="text-muted small ms-2 d-none d-md-inline">@((laptop.Price * 1.2m).ToString("N0")) EGP</del>
                                        </div>
                                        <span class="badge bg-@(laptop.StockQuantity > 0 ? "success" : "danger") rounded-pill">
                                            @(laptop.StockQuantity > 0 ? "In Stock" : "Sold Out")
                                        </span>
                                    </div>
                                    <div class="d-grid gap-2 mt-auto">
                                        <a asp-action="Details" asp-route-id="@laptop.ProductID"
                                           class="btn btn-outline-primary rounded-pill btn-sm">
                                            View Details
                                        </a>
                                        @if (SignInManager.IsSignedIn(User))
                                        {
                                            <form asp-controller="Cart" asp-action="AddToCart" method="post">
                                                @Html.AntiForgeryToken()
                                                <input type="hidden" name="productId" value="@laptop.ProductID" />
                                                <button type="submit"
                                                        class="btn btn-primary rounded-pill btn-sm d-flex align-items-center justify-content-center w-100"
                                                @(laptop.StockQuantity == 0 ? "disabled" : "")>
                                                    <span class="spinner-border spinner-border-sm d-none me-2" role="status" aria-hidden="true"></span>
                                                    <span class="btn-text">Add to Cart</span>
                                                    <i class="bi bi-cart-plus ms-2"></i>
                                                </button>
                                            </form>
                                        }
                                        else
                                        {
                                            <a asp-controller="Cart" asp-action="RequestAddToCartAfterLogin"
                                               asp-route-productId="@laptop.ProductID"
                                               class="btn btn-primary rounded-pill btn-sm d-flex align-items-center justify-content-center w-100">
                                                <span class="spinner-border spinner-border-sm d-none me-2" role="status" aria-hidden="true"></span>
                                                <span class="btn-text">Add to Cart</span>
                                                <i class="bi bi-cart-plus ms-2"></i>
                                            </a>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</section>


<section id="Storage" class="py-4 py-md-5 ">
    <div class="container">
        <div class="curved-line">
            <div class="d-flex justify-content-between align-items-center mb-3 mb-md-4">
                <h3-title class=" fw-bold text-uppercase  mb-0">Storage</h3-title>
                <a asp-action="GetAllLaptops" asp-controller="Home"
                   class="text-decoration-none Mtext-primary d-none d-md-inline">
                    View All <i class="bi bi-arrow-right"></i>
                </a>
            </div>
        </div>
    </div>
        </section>


<section id="Accessories" class="py-4 py-md-5 ">
    <div class="container">
        <div class="curved-line">
            <div class="d-flex justify-content-between align-items-center mb-3 mb-md-4">
                <h3-title class="  fw-bold text-uppercase  text-uppercase mb-0">Accessories</h3-title>
                <a asp-action="GetAllLaptops" asp-controller="Home"
                   class="text-decoration-none Mtext-primary d-none d-md-inline">
                    View All <i class="bi bi-arrow-right"></i>
                </a>
            </div>
        </div>
    </div>
</section>


 <style>
/* Carousel Styles */
    .product-card {
        scroll-behavior: smooth;
        min-width: 22%;
        flex: 0 0 22%;
        /* Add these properties */
        transition: transform 0.3s;
        scroll-snap-align: start;
    }

.scroll-container,
.scroll-container-laptops {
    overflow-x: auto;
    scroll-snap-type: x mandatory;
    -ms-overflow-style: none;
    scrollbar-width: none;
    padding: 1rem 0;
}

.scroll-container::-webkit-scrollbar,
.scroll-container-laptops::-webkit-scrollbar {
    display: none;
}

.carousel-arrow {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    background: rgba(255, 255, 255, 0.9);
    border: 2px solid #0d6efd;
    width: 45px;
    height: 45px;
    border-radius: 50%;
    z-index: 2;
    transition: all 0.3s;
    box-shadow: 0 2px 5px rgba(0,0,0,0.1);
}

.carousel-arrow:hover {
    background: #0d6efd;
    color: white;
    transform: translateY(-50%) scale(1.1);
}

.prev-arrow { left: -25px; }
.next-arrow { right: -25px; }

.prev-arrow-laptops { left: -25px; }
.next-arrow-laptops { right: -25px; }

/* Responsive Behavior */
@@media (max-width: 992px) {
    .product-card {
        flex: 0 0 calc(48% - 1rem);
        max-width: calc(48% - 1rem);
    }
}

@@media (max-width: 576px) {
    .product-card {
        flex: 0 0 100%;
        max-width: 100%;
    }

    .carousel-arrow {
        display: none !important;
    }
}

.simple-carousel {
    position: relative;
    max-width: 800px;
    margin: 0 auto;
    overflow: hidden;
    border-radius: 10px;
    box-shadow: 0 4px 10px rgba(0,0,0,0.1);
}

.carousel-inner {
    display: flex;
    transition: transform 0.5s ease-in-out;
}

.carousel-item {
    min-width: 100%;
    position: relative;
}

.carousel-image {
    width: 100%;
    height: 400px;
    object-fit: cover;
}

.carousel-caption {
    position: absolute;
    bottom: 20px;
    left: 20px;
    color: white;
    text-shadow: 2px 2px 4px rgba(0,0,0,0.5);
}

.carousel-indicators {
    position: absolute;
    bottom: 10px;
    left: 50%;
    transform: translateX(-50%);
    display: flex;
    gap: 8px;
}

.indicator {
    width: 10px;
    height: 10px;
    background: rgba(255,255,255,0.5);
    border-radius: 50%;
    cursor: pointer;
    transition: background 0.3s;
}

.indicator.active {
    background: #ffffff;
}

/* Responsive adjustments */
@@media (max-width: 768px) {
    .carousel-image {
        height: 300px;
    }
    
    .carousel-caption h3 {
        font-size: 1.5rem;
    }
}


</style>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        function handleNavigation(container, direction) {
            const itemWidth = container.querySelector('.product-card').offsetWidth;
            const currentPosition = container.scrollLeft;
            const totalWidth = container.scrollWidth;
            const visibleWidth = container.clientWidth;

            // Move items for infinite effect
            if (direction === 'next') {
                if (currentPosition >= totalWidth - visibleWidth - itemWidth) {
                    const firstItem = container.firstElementChild;
                    container.appendChild(firstItem.cloneNode(true));
                    container.removeChild(firstItem);
                    container.scrollLeft = currentPosition - itemWidth;
                }
                container.scrollBy({ left: itemWidth, behavior: 'smooth' });
            } else {
                if (currentPosition <= itemWidth) {
                    const lastItem = container.lastElementChild;
                    container.insertBefore(lastItem.cloneNode(true), container.firstChild);
                    container.removeChild(lastItem);
                    container.scrollLeft = itemWidth * 2;
                }
                container.scrollBy({ left: -itemWidth, behavior: 'smooth' });
            }
        }

        // Best Selling Carousel
        const scrollContainer = document.querySelector('.scroll-container');
        const prevArrow = document.querySelector('.prev-arrow');
        const nextArrow = document.querySelector('.next-arrow');

        nextArrow?.addEventListener('click', () => handleNavigation(scrollContainer, 'next'));
        prevArrow?.addEventListener('click', () => handleNavigation(scrollContainer, 'prev'));

        // Laptops Carousel (duplicate logic)
        const scrollContainerLaptops = document.querySelector('.scroll-container-laptops');
        const prevArrowLaptops = document.querySelector('.prev-arrow-laptops');
        const nextArrowLaptops = document.querySelector('.next-arrow-laptops');

        nextArrowLaptops?.addEventListener('click', () => handleNavigation(scrollContainerLaptops, 'next'));
        prevArrowLaptops?.addEventListener('click', () => handleNavigation(scrollContainerLaptops, 'prev'));


        document.querySelectorAll('.indicator').forEach((indicator, index) => {
            indicator.addEventListener('click', () => {
                const carouselInner = document.querySelector('.carousel-inner');
                const offset = -index * 100;
                carouselInner.style.transform = `translateX(${offset}%)`;

                // Update active indicator
                document.querySelectorAll('.indicator').forEach(i => i.classList.remove('active'));
                indicator.classList.add('active');
            });
        });

        // Promotion Carousel
        const promoInner = document.querySelector('.simple-carousel .carousel-inner');
        const promoIndicators = document.querySelectorAll('.simple-carousel .indicator');
        const prevPromo = document.querySelector('.prev-arrow-promo');
        const nextPromo = document.querySelector('.next-arrow-promo');
        let currentIndex = 0;

        function updateCarousel() {
            const offset = -currentIndex * 100;
            promoInner.style.transform = `translateX(${offset}%)`;

            promoIndicators.forEach(i => i.classList.remove('active'));
            promoIndicators[currentIndex]?.classList.add('active');
        }

        promoIndicators.forEach((indicator, index) => {
            indicator.addEventListener('click', () => {
                currentIndex = index;
                updateCarousel();
            });
        });

        prevPromo?.addEventListener('click', () => {
            currentIndex = (currentIndex - 1 + promoIndicators.length) % promoIndicators.length;
            updateCarousel();
        });

        nextPromo?.addEventListener('click', () => {
            currentIndex = (currentIndex + 1) % promoIndicators.length;
            updateCarousel();
        });

        // Auto-play
        setInterval(() => {
            currentIndex = (currentIndex + 1) % promoIndicators.length;
            updateCarousel();
        }, 5000);

    });
</script>