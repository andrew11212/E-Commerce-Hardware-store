@using FutureTechnologyE_Commerce.Models.ViewModels
@model HomeIndexViewModel
@{
    ViewData["Title"] = "Home Page";
}



<!-- Best Selling Products Section -->
<section class="py-4 py-md-5">
    <div class="container ">
        <!-- Full-width curved header line -->
        <div class="curved-line">
            <div class="d-flex justify-content-between align-items-center mb-3 mb-md-4">
                <h3-title class="fw-bold mb-0">Best Selling Products</h3-title>
                <a   asp-action="GetAllProducts" asp-controller="Home" class="text-decoration-none Mtext-primary d-none d-md-inline">
                    View All <i class="bi bi-arrow-right"></i>
                </a>
            </div>
        </div>

        <!-- Contained product grid -->
        <div class="product-container">
            <div class="row g-3 g-md-4">
                
                @foreach (var product in Model.Products)
                {
                    <div class="col-6 col-md-4 col-lg-3">
                        <div class="card h-100 shadow-sm rounded-3 overflow-hidden">
                            <picture>
                                <source srcset="@product.ImageUrl" type="image/jpeg">
                                <img src="@product.ImageUrl"
                                     class="card-img-top object-fit-cover"
                                     style="aspect-ratio: 4/3;"
                                     alt="@product.Name"
                                     loading="lazy"
                                     onerror="this.src='/images/placeholder.avif'">
                            </picture>
                            <div class="card-body d-flex flex-column px-3 pb-3">
                                <h5 class="card-title fw-semibold text-truncate-2 mb-2">@product.Name</h5>
                                <div class="d-flex justify-content-between align-items-center mb-3">
                                    <div>
                                        <span class="text-primary fw-bold fs-5">@product.Price.ToString("C")</span>
                                        <del class="text-muted small ms-2 d-none d-md-inline">@((product.Price * 1.2m).ToString("C"))</del>
                                    </div>
                                    <span class="badge @(product.StockQuantity > 0 ? "bg-success" : "bg-danger") rounded-pill">
                                        @(product.StockQuantity > 0 ? "In Stock" : "Sold Out")
                                    </span>
                                </div>
                                <div class="d-grid gap-2 mt-auto">
                                    <a asp-action="Details" asp-route-id="@product.ProductID"
                                       class="btn btn-outline-primary rounded-pill btn-sm">
                                        View Details
                                    </a>
                                    <form asp-controller="Cart" asp-action="AddToCart" method="post">
                                        @Html.AntiForgeryToken()
                                        <input type="hidden" name="productId" value="@product.ProductID" />
                                        <div class="d-grid gap-2">
                                            <button type="submit"
                                                    class="btn btn-primary rounded-pill btn-sm d-flex align-items-center justify-content-center"
                                            @(product.StockQuantity == 0 ? "disabled" : "")>
                                                <span class="spinner-border spinner-border-sm d-none me-2" role="status" aria-hidden="true"></span>
                                                <span class="btn-text">Add to Cart</span> <i class="bi bi-cart-plus ms-2"></i>
                                            </button>
                                            <a href="#" class="btn btn-outline-secondary rounded-pill btn-sm d-flex align-items-center">
                                                <i class="bi bi-heart me-2"></i> Wishlist
                                            </a>
                                        </div>
                                    </form>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
            <div class="text-center mt-4 d-md-none">
                <a asp-action="GetAllProducts" asp-controller="Home" class="btn btn-outline-primary rounded-pill">View All Products</a>
            </div>
        </div>
    </div>
</section>

<!-- Laptops Section -->
<section id="laptops" class="py-4 py-md-5">
    <div class="container">
        <!-- Full-width curved header line -->
        <div class="curved-line">
            <div class="d-flex justify-content-between align-items-center mb-3 mb-md-4">
                <h3-title class="fw-bold mb-0">Laptops</h3-title>
                <a asp-action="GetAllLaptops" asp-controller="Home" class="text-decoration-none Mtext-primary d-none d-md-inline">
                    View All <i class="bi bi-arrow-right"></i>
                </a>
            </div>
        </div>

        <!-- Contained product grid -->
        <div class="product-container">
            <div class="row g-3 g-md-4">
                <!-- Add laptop products here following the same pattern -->
            </div>
            <div class="text-center mt-4 d-md-none">
                <a    asp-action="GetAllLaptops" asp-controller="Home"class="btn btn-outline-primary rounded-pill">View All Laptops</a>
            </div>
        </div>
    </div>
</section>

@section Scripts {
    <script>
        // Existing JavaScript code remains unchanged
        document.addEventListener('DOMContentLoaded', function () {
            const addToCartForms = document.querySelectorAll('.add-to-cart-form');
            const cartCount = document.querySelector('.cart-count');

            addToCartForms.forEach(form => {
                form.addEventListener('submit', async function (e) {
                    e.preventDefault();

                    const button = this.querySelector('button[type="submit"]');
                    const spinner = button.querySelector('.spinner-border');
                    const buttonText = button.querySelector('.btn-text');
                    const productId = this.querySelector('input[name="productId"]').value;

                    button.disabled = true;
                    spinner.classList.remove('d-none');
                    buttonText.textContent = 'Adding...';

                    try {
                        const response = await fetch('/Cart/AddToCart', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                                'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                            },
                            body: JSON.stringify({ productId })
                        });

                        if (response.ok) {
                            const data = await response.json();
                            cartCount.textContent = data.cartCount;
                            showSuccess(button);
                        } else {
                            throw new Error('Error adding to cart');
                        }
                    } catch (error) {
                        console.error(error);
                        showError(button);
                    }
                });
            });

            function showSuccess(button) {
                const originalText = button.querySelector('.btn-text').textContent;
                button.classList.add('btn-success');
                button.querySelector('.btn-text').textContent = 'Added ✓';

                setTimeout(() => {
                    button.disabled = false;
                    button.querySelector('.spinner-border').classList.add('d-none');
                    button.querySelector('.btn-text').textContent = originalText;
                    button.classList.remove('btn-success');
                }, 2000);
            }

            function showError(button) {
                button.classList.add('btn-danger');
                button.querySelector('.btn-text').textContent = 'Error!';

                setTimeout(() => {
                    button.disabled = false;
                    button.querySelector('.spinner-border').classList.add('d-none');
                    button.querySelector('.btn-text').textContent = 'Add to Cart';
                    button.classList.remove('btn-danger');
                }, 2000);
            }
        });
    </script>
}