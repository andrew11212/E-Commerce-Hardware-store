@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@model Product
@{
    ViewData["Title"] = Model.Name;
    // Formatting helper function for EGP currency
    string FormatEGP(decimal amount) => $"{amount:N2} EGP";
}

<div class="container-fluid py-5 bg-light">
    <div class="container">
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a asp-controller="Home" asp-action="Index">Home</a></li>
                <li class="breadcrumb-item"><a asp-controller="Home" asp-action="GetAllProducts">Products</a></li>
                <li class="breadcrumb-item active" aria-current="page">@Model.Name</li>
            </ol>
        </nav>
    </div>
</div>

<!-- Product Details Section -->
<section class="container py-5">
    <div class="row g-4">
        <!-- Product Images -->
        <div class="col-lg-6 mb-4">
            <div class="card border-0 shadow-sm rounded-4 overflow-hidden">
                <div class="product-image-wrapper position-relative">
                    @if (Model.IsBestseller)
                    {
                        <span class="badge bg-warning position-absolute top-0 start-0 m-3 py-2 px-3 rounded-pill">Bestseller</span>
                    }
                    <img src="@Model.ImageUrl"
                         class="img-fluid w-100"
                         alt="@Model.Name"
                         onerror="this.src='/images/placeholder.png'"
                         style="aspect-ratio: 4/3; object-fit: contain; background-color: white;">
                </div>
            </div>
        </div>

        <!-- Product Info -->
        <div class="col-lg-6">
            <div class="ps-lg-4">
                <!-- Product Title and Rating -->
                <h1 class="display-5 fw-bold mb-2">@Model.Name</h1>
                <div class="d-flex align-items-center mb-3">
                    <div class="text-warning me-2">
                        <i class="bi bi-star-fill"></i>
                        <i class="bi bi-star-fill"></i>
                        <i class="bi bi-star-fill"></i>
                        <i class="bi bi-star-fill"></i>
                        <i class="bi bi-star-half"></i>
                    </div>
                    <div class="text-muted small">4.5/5 (Reviews)</div>
                </div>
                
                <!-- Price Information -->
                <div class="d-flex align-items-baseline mb-4">
                    <h2 class="text-primary fw-bold mb-0 me-3">@FormatEGP(Model.Price)</h2>
                    <del class="text-muted h5">@FormatEGP(Model.Price * 1.2m)</del>
                    <span class="badge bg-danger ms-3">20% OFF</span>
                </div>
                
                <!-- Product Metadata -->
                <div class="mb-4 p-4 bg-light rounded-3">
                    <div class="row g-3">
                        <div class="col-md-6">
                            <div class="d-flex align-items-center">
                                <i class="bi bi-tag-fill text-primary me-2 fs-5"></i>
                                <div>
                                    <div class="text-muted small">Brand</div>
                                    <div class="fw-semibold">@Model.Brand?.Name</div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="d-flex align-items-center">
                                <i class="bi bi-folder-fill text-primary me-2 fs-5"></i>
                                <div>
                                    <div class="text-muted small">Category</div>
                                    <div class="fw-semibold">@Model.Category?.Name</div>
                                </div>
                            </div>
                        </div>
                       
                        <div class="col-md-6">
                            <div class="d-flex align-items-center">
                                <i class="bi bi-clipboard-check-fill text-primary me-2 fs-5"></i>
                                <div>
                                    <div class="text-muted small">Availability</div>
                                    <div>
                                        <span class="badge @(Model.StockQuantity > 0 ? "bg-success" : "bg-danger") rounded-pill">
                                            @(Model.StockQuantity > 0 ? $"{Model.StockQuantity} in stock" : "Out of stock")
                                        </span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Delivery Options -->
                <div class="mb-4">
                    <div class="fw-semibold mb-2">Delivery Options:</div>
                    <div class="d-flex align-items-center mb-2">
                        <i class="bi bi-truck text-success me-2"></i>
                        <span>Free shipping for orders over 1000 EGP</span>
                    </div>
                    <div class="d-flex align-items-center">
                        <i class="bi bi-clock-history text-info me-2"></i>
                        <span>Estimated delivery: 3-5 business days</span>
                    </div>
                </div>
                
                <!-- Add to Cart Section -->
                <div class="d-grid gap-2 mb-4">
                    @if (SignInManager.IsSignedIn(User))
                    {
                        <div class="d-flex gap-3">
                            <div class="input-group" style="max-width: 150px;">
                                <button class="btn btn-outline-secondary" type="button" id="btnMinus">
                                    <i class="bi bi-dash"></i>
                                </button>
                                <input type="number" name="quantity" class="form-control text-center" value="1" min="1" max="@Model.StockQuantity" id="quantity">
                                <button class="btn btn-outline-secondary" type="button" id="btnPlus">
                                    <i class="bi bi-plus"></i>
                                </button>
                            </div>
                            
                            <form asp-controller="Cart" asp-action="AddToCart" method="post" class="flex-grow-1">
                                @Html.AntiForgeryToken()
                                <input type="hidden" name="productId" value="@Model.ProductID" />
                                <input type="hidden" name="count" value="1" id="hiddenQuantity" />
                                <button type="submit" class="btn btn-primary btn-lg w-100 rounded-3" id="addToCartBtn" @(Model.StockQuantity == 0 ? "disabled" : "")>
                                    <i class="bi bi-cart-plus me-2"></i> Add to Cart
                                </button>
                            </form>
                        </div>
                        
                        <!-- Cart Control Buttons - Only shown if product is in cart -->
                        <div id="cartControlsContainer" class="d-none">
                            <div class="d-flex gap-3 align-items-center">
                                <div class="d-flex align-items-center flex-grow-1">
                                    <form asp-controller="Cart" asp-action="MinusByProduct" method="post" class="me-2">
                                        @Html.AntiForgeryToken()
                                        <input type="hidden" name="productId" value="@Model.ProductID" />
                                        <button type="button" class="btn btn-outline-primary rounded-circle" id="cartMinusBtn">
                                            <i class="bi bi-dash"></i>
                                        </button>
                                    </form>
                                    
                                    <span class="badge bg-light text-dark border px-3 py-2" id="cartCount">0</span>
                                    
                                    <form asp-controller="Cart" asp-action="PlusByProduct" method="post" class="ms-2">
                                        @Html.AntiForgeryToken()
                                        <input type="hidden" name="productId" value="@Model.ProductID" />
                                        <button type="button" class="btn btn-outline-primary rounded-circle" id="cartPlusBtn">
                                            <i class="bi bi-plus"></i>
                                        </button>
                                    </form>
                                </div>
                                
                                <a asp-controller="Cart" asp-action="Index" class="btn btn-success">
                                    <i class="bi bi-cart me-2"></i> View Cart
                                </a>
                            </div>
                        </div>
                    }
                    else
                    {
                        <a asp-controller="Cart" asp-action="RequestAddToCartAfterLogin"
                           asp-route-productId="@Model.ProductID"
                           class="btn btn-primary btn-lg rounded-3">
                            <i class="bi bi-cart-plus me-2"></i> Add to Cart
                        </a>
                    }
                    <button class="btn btn-outline-primary rounded-3">
                        <i class="bi bi-heart me-2"></i> Add to Wishlist
                    </button>
                </div>

                <!-- Share Buttons -->
                <div class="mt-4">
                    <p class="fw-semibold mb-2">Share this product:</p>
                    <div class="d-flex gap-2">
                        <a href="#" class="btn btn-sm btn-outline-primary rounded-circle">
                            <i class="bi bi-facebook"></i>
                        </a>
                        <a href="#" class="btn btn-sm btn-outline-info rounded-circle">
                            <i class="bi bi-twitter"></i>
                        </a>
                        <a href="#" class="btn btn-sm btn-outline-success rounded-circle">
                            <i class="bi bi-whatsapp"></i>
                        </a>
                        <a href="#" class="btn btn-sm btn-outline-secondary rounded-circle">
                            <i class="bi bi-envelope"></i>
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Tabs for Description and Specifications -->
    <div class="row mt-5">
        <div class="col-12">
            <ul class="nav nav-tabs mb-4" id="productTabs" role="tablist">
                <li class="nav-item" role="presentation">
                    <button class="nav-link active" id="description-tab" data-bs-toggle="tab" data-bs-target="#description" type="button" role="tab" aria-controls="description" aria-selected="true">
                        Description
                    </button>
                </li>
                <li class="nav-item" role="presentation">
                    <button class="nav-link" id="specs-tab" data-bs-toggle="tab" data-bs-target="#specs" type="button" role="tab" aria-controls="specs" aria-selected="false">
                        Specifications
                    </button>
                </li>
                <li class="nav-item" role="presentation">
                    <button class="nav-link" id="reviews-tab" data-bs-toggle="tab" data-bs-target="#reviews" type="button" role="tab" aria-controls="reviews" aria-selected="false">
                        Reviews
                    </button>
                </li>
            </ul>
            <div class="tab-content" id="productTabsContent">
                <div class="tab-pane fade show active" id="description" role="tabpanel" aria-labelledby="description-tab">
                    <div class="p-4 bg-white rounded-3 shadow-sm">
                        @if (string.IsNullOrEmpty(Model.Description))
                        {
                            <p class="text-muted fst-italic">No description available for this product.</p>
                        }
                        else
                        {
                            @Html.Raw(Model.Description)
                        }
                    </div>
                </div>
                <div class="tab-pane fade" id="specs" role="tabpanel" aria-labelledby="specs-tab">
                    <div class="p-4 bg-white rounded-3 shadow-sm">
                        <h5 class="mb-3">Technical Specifications</h5>
                        <div class="table-responsive">
                            <table class="table table-bordered">
                                <tbody>
                                    <tr>
                                        <th style="width: 30%">Brand</th>
                                        <td>@Model.Brand?.Name</td>
                                    </tr>
                                    <tr>
                                        <th>Model</th>
                                        <td>@Model.Name</td>
                                    </tr>
                                    <tr>
                                        <th>Category</th>
                                        <td>@Model.Category?.Name</td>
                                    </tr>
                                    <tr>
                                        <th>Warranty</th>
                                        <td>1 Year Manufacturer Warranty</td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
                <div class="tab-pane fade" id="reviews" role="tabpanel" aria-labelledby="reviews-tab">
                    <div class="p-4 bg-white rounded-3 shadow-sm">
                        <div class="d-flex justify-content-between align-items-center mb-4">
                            <h5 class="mb-0">Customer Reviews</h5>
                            <button class="btn btn-sm btn-primary">Write a Review</button>
                        </div>
                        <div class="text-center py-5">
                            <i class="bi bi-chat-square-text display-4 text-muted mb-3"></i>
                            <p class="lead">No reviews yet</p>
                            <p class="text-muted">Be the first to review this product</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<!-- Product Reviews Section -->
<section class="container py-5 mt-4">
    <div class="card border-0 shadow-sm rounded-4 overflow-hidden">
        <div class="card-header bg-white border-0 pt-4 pb-0">
            <h3 class="mb-0">Customer Reviews</h3>
            <div class="d-flex align-items-center mt-2">
                <div class="me-3">
                    <span class="display-6 fw-bold text-primary">@ViewBag.AverageRating.ToString("0.0")</span>
                    <span class="text-muted">/ 5</span>
                </div>
                <div>
                    <div class="mb-1">
                        @for (int i = 1; i <= 5; i++)
                        {
                            if (i <= Math.Round(ViewBag.AverageRating))
                            {
                                <i class="bi bi-star-fill text-warning fs-5"></i>
                            }
                            else
                            {
                                <i class="bi bi-star text-warning fs-5"></i>
                            }
                        }
                    </div>
                    <p class="mb-0 text-muted">Based on @ViewBag.Reviews.Count reviews</p>
                </div>
                <div class="ms-auto">
                    @if (SignInManager.IsSignedIn(User))
                    {
                        <a asp-controller="Review" asp-action="Create" asp-route-productId="@Model.ProductID" 
                           class="btn btn-primary rounded-pill">
                            <i class="bi bi-pencil-square me-2"></i> Write a Review
                        </a>
                    }
                    else
                    {
                        <a asp-area="Identity" asp-page="/Account/Login" class="btn btn-outline-primary rounded-pill">
                            Sign in to Write a Review
                        </a>
                    }
                </div>
            </div>
        </div>
        <div class="card-body py-4">
            @if (ViewBag.Reviews != null && ViewBag.Reviews.Count > 0)
            {
                <div class="reviews-list">
                    @foreach (var review in ViewBag.Reviews)
                    {
                        <div class="review-item mb-4 pb-4 border-bottom">
                            <div class="d-flex">
                                <div class="avatar-circle me-3 bg-primary text-white">
                                    @(review.User.UserName != null && review.User.UserName.Length > 0 ? review.User.UserName.Substring(0, 1).ToUpper() : "U")
                                </div>
                                <div class="flex-grow-1">
                                    <div class="d-flex justify-content-between align-items-center mb-2">
                                        <h5 class="mb-0">
                                            @review.User.UserName
                                        </h5>
                                        <span class="text-muted small">@review.ReviewDate.ToString("MMM dd, yyyy")</span>
                                    </div>
                                    <div class="mb-2">
                                        @for (int i = 1; i <= 5; i++)
                                        {
                                            if (i <= review.Rating)
                                            {
                                                <i class="bi bi-star-fill text-warning"></i>
                                            }
                                            else
                                            {
                                                <i class="bi bi-star text-warning"></i>
                                            }
                                        }
                                    </div>
                                    <p class="mb-0">@review.Comment</p>
                                    
                                    @if (SignInManager.IsSignedIn(User) && (User.Identity.Name == review.User.UserName || User.IsInRole("Admin")))
                                    {
                                        <div class="mt-3 d-flex gap-2">
                                            <a asp-controller="Review" asp-action="Edit" asp-route-id="@review.ReviewID" 
                                               class="btn btn-sm btn-outline-primary">
                                                <i class="bi bi-pencil"></i> Edit
                                            </a>
                                            <form asp-controller="Review" asp-action="Delete" asp-route-id="@review.ReviewID" method="post" 
                                                  onsubmit="return confirm('Are you sure you want to delete this review?');">
                                                @Html.AntiForgeryToken()
                                                <button type="submit" class="btn btn-sm btn-outline-danger">
                                                    <i class="bi bi-trash"></i> Delete
                                                </button>
                                            </form>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                    }
                </div>
            }
            else
            {
                <div class="text-center py-5">
                    <i class="bi bi-chat-square-text fs-1 text-muted mb-3"></i>
                    <h5>No Reviews Yet</h5>
                    <p class="text-muted">Be the first to review this product!</p>
                </div>
            }
        </div>
    </div>
</section>

<!-- Related Products -->
<section class="container-fluid bg-light py-5">
    <div class="container">
        <div class="d-flex justify-content-between align-items-center mb-4">
            <h2 class="fw-bold mb-0">Related Products</h2>
            <a asp-controller="Home" asp-action="GetAllProducts" class="btn btn-outline-primary">View All</a>
        </div>
        <div class="row g-4">
            @if (ViewBag.RelatedProducts != null && ViewBag.RelatedProducts.Count > 0)
            {
                @foreach (var product in ViewBag.RelatedProducts)
                {
                    <div class="col-xl-3 col-lg-4 col-md-6">
                        <div class="card h-100 border-0 shadow-sm rounded-4 product-card">
                            <div class="position-relative">
                                @if (product.GetType().Name == "Laptop")
                                {
                                    <a asp-controller="Laptops" asp-action="Details" asp-route-id="@product.ProductID">
                                        <img src="@product.ImageUrl"
                                             class="card-img-top"
                                             alt="@product.Name"
                                             onerror="this.src='/images/placeholder.png'"
                                             style="height: 200px; object-fit: contain; background-color: white;">
                                    </a>
                                }
                                else
                                {
                                    <a asp-controller="Home" asp-action="Details" asp-route-id="@product.ProductID">
                                        <img src="@product.ImageUrl"
                                             class="card-img-top"
                                             alt="@product.Name"
                                             onerror="this.src='/images/placeholder.png'"
                                             style="height: 200px; object-fit: contain; background-color: white;">
                                    </a>
                                }
                                <button class="btn btn-sm rounded-circle position-absolute top-0 end-0 m-2 p-2 bg-white text-primary shadow-sm wishlist-btn">
                                    <i class="bi bi-heart"></i>
                                </button>
                            </div>
                            <div class="card-body p-4">
                                <div class="text-muted small mb-1">@product.Brand?.Name</div>
                                <h5 class="card-title fw-semibold mb-2">
                                    @if (product.GetType().Name == "Laptop")
                                    {
                                        <a asp-controller="Laptops" asp-action="Details" asp-route-id="@product.ProductID" class="text-decoration-none text-dark product-name">
                                            @product.Name
                                        </a>
                                    }
                                    else
                                    {
                                        <a asp-controller="Home" asp-action="Details" asp-route-id="@product.ProductID" class="text-decoration-none text-dark product-name">
                                            @product.Name
                                        </a>
                                    }
                                </h5>
                                <div class="d-flex align-items-center justify-content-between">
                                    <div class="fw-bold text-primary">@FormatEGP(product.Price)</div>
                                    @if (product.GetType().Name == "Laptop")
                                    {
                                        <a asp-controller="Laptops" asp-action="Details" asp-route-id="@product.ProductID" class="btn btn-sm btn-primary">
                                            <i class="bi bi-eye"></i> View
                                        </a>
                                    }
                                    else
                                    {
                                        <a asp-controller="Home" asp-action="Details" asp-route-id="@product.ProductID" class="btn btn-sm btn-primary">
                                            <i class="bi bi-eye"></i> View
                                        </a>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                }
            }
            else
            {
                <div class="col-12 text-center py-5">
                    <p class="lead text-muted">No related products found</p>
                </div>
            }
        </div>
    </div>
</section>

@section Scripts {
    <script>
        $(document).ready(function() {
            const productId = @Model.ProductID;
            const maxStock = @Model.StockQuantity;
            let quantityInput = $('#quantity');
            let hiddenQuantity = $('#hiddenQuantity');
            
            // Check if this product is in the cart initially
            checkProductInCart();
            
            // Quantity control for Add to Cart
            $('#btnPlus').click(function() {
                let currentVal = parseInt(quantityInput.val());
                if (currentVal < maxStock) {
                    quantityInput.val(currentVal + 1);
                    hiddenQuantity.val(currentVal + 1);
                } else {
                    showToast('Error', 'Maximum stock limit reached', 'danger');
                }
            });
            
            $('#btnMinus').click(function() {
                let currentVal = parseInt(quantityInput.val());
                if (currentVal > 1) {
                    quantityInput.val(currentVal - 1);
                    hiddenQuantity.val(currentVal - 1);
                }
            });
            
            // Update hidden quantity when input changes directly
            quantityInput.change(function() {
                let val = parseInt($(this).val());
                
                // Validation
                if (isNaN(val) || val < 1) {
                    $(this).val(1);
                    val = 1;
                } else if (val > maxStock) {
                    $(this).val(maxStock);
                    val = maxStock;
                    showToast('Warning', 'Quantity adjusted to maximum available stock', 'warning');
                }
                
                hiddenQuantity.val(val);
            });
            
            // Cart quantity control buttons (when product is already in cart)
            $('#cartPlusBtn').click(function() {
                const token = $('input[name="__RequestVerificationToken"]').first().val();
                
                $.ajax({
                    url: '@Url.Action("PlusByProductAjax", "Cart")',
                    type: 'POST',
                    data: { 
                        productId: productId,
                        __RequestVerificationToken: token 
                    },
                    success: function(response) {
                        if (response.success) {
                            $('#cartCount').text(response.count);
                            showToast('Success', response.message, 'success');
                            // Update UI to show cart controls if this was first addition
                            if (response.isNew) {
                                showCartControls();
                            }
                        } else {
                            showToast('Error', response.error, 'danger');
                        }
                    },
                    error: function() {
                        showToast('Error', 'Failed to update cart', 'danger');
                    }
                });
            });
            
            $('#cartMinusBtn').click(function() {
                const token = $('input[name="__RequestVerificationToken"]').first().val();
                
                $.ajax({
                    url: '@Url.Action("MinusByProductAjax", "Cart")',
                    type: 'POST',
                    data: { 
                        productId: productId,
                        __RequestVerificationToken: token 
                    },
                    success: function(response) {
                        if (response.success) {
                            if (response.removed) {
                                // Product removed from cart, hide cart controls
                                hideCartControls();
                                showToast('Success', 'Product removed from cart', 'success');
                            } else {
                                // Update quantity display
                                $('#cartCount').text(response.count);
                                showToast('Success', response.message, 'success');
                            }
                        } else {
                            showToast('Error', response.error, 'danger');
                        }
                    },
                    error: function() {
                        showToast('Error', 'Failed to update cart', 'danger');
                    }
                });
            });
            
            // Check if product is in cart on page load
            function checkProductInCart() {
                $.ajax({
                    url: '@Url.Action("GetCartCount", "Cart")',
                    type: 'GET',
                    success: function(response) {
                        if (response.success && response.count > 0) {
                            // Additional check if this specific product is in cart
                            const token = $('input[name="__RequestVerificationToken"]').first().val();
                            
                            $.ajax({
                                url: '@Url.Action("GetProductCartInfo", "Cart")',
                                type: 'GET',
                                data: { productId: productId },
                                success: function(productResponse) {
                                    if (productResponse.success && productResponse.inCart) {
                                        $('#cartCount').text(productResponse.count);
                                        showCartControls();
                                    }
                                }
                            });
                        }
                    }
                });
            }
            
            // Helper functions
            function showCartControls() {
                $('#cartControlsContainer').removeClass('d-none');
                $('.d-flex.gap-3:first').addClass('d-none');
            }
            
            function hideCartControls() {
                $('#cartControlsContainer').addClass('d-none');
                $('.d-flex.gap-3:first').removeClass('d-none');
            }
            
            // Toast notification function
            function showToast(title, message, type = 'info') {
                // Check if toast container exists, if not create it
                if ($('#toast-container').length === 0) {
                    $('body').append('<div id="toast-container" class="toast-container position-fixed bottom-0 end-0 p-3"></div>');
                }
                
                // Create toast HTML
                const toastHtml = `
                    <div class="toast align-items-center text-white bg-${type} border-0" role="alert" aria-live="assertive" aria-atomic="true">
                        <div class="d-flex">
                            <div class="toast-body">
                                <strong>${title}:</strong> ${message}
                            </div>
                            <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
                        </div>
                    </div>
                `;
                
                // Append and show toast
                const toastElement = $(toastHtml);
                $('#toast-container').append(toastElement);
                const toast = new bootstrap.Toast(toastElement[0], { delay: 3000 });
                toast.show();
            }
        });
    </script>
    
    <style>
        /* Product details page specific styles */
        .product-image-wrapper img {
            transition: transform 0.3s ease;
        }
        
        .product-card {
            transition: transform 0.2s ease, box-shadow 0.2s ease;
        }
        
        .product-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 20px rgba(0,0,0,0.1) !important;
        }
        
        .product-name {
            display: -webkit-box;
            -webkit-line-clamp: 2;
            -webkit-box-orient: vertical;
            overflow: hidden;
            text-overflow: ellipsis;
            height: 2.8rem;
        }
        
        .wishlist-btn:hover {
            color: #dc3545 !important;
        }
        
        .wishlist-btn:hover i::before {
            content: "\f415";  /* bi-heart-fill */
        }
        
        /* Tab styling */
        .nav-tabs .nav-link {
            color: var(--bs-gray-700);
            font-weight: 500;
            border: none;
            border-bottom: 3px solid transparent;
            padding: 0.75rem 1.25rem;
        }
        
        .nav-tabs .nav-link.active {
            color: var(--bs-primary);
            background: none;
            border-bottom: 3px solid var(--bs-primary);
        }
        
        /* Make description content better */
        #description p {
            line-height: 1.7;
            margin-bottom: 1rem;
        }
    </style>
}